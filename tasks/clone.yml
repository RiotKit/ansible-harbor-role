- name: Create project directory with write access for the technical user
  become: yes
  file:
      path: "{{ project_dir }}"
      state: directory
      mode: u+rw,g+rw,o+r
      owner: "{{ deploy_user|default('technical') }}"
      group: "{{ deploy_group|default('technical') }}"

- name: If repository already exists, and has origin then clear the origin
  become: yes
  become_user: "{{ deploy_user|default('technical') }}"
  shell: "(cd {{ project_dir }} && git remote remove origin) || true"

- name: If repository already exists and has origin, then add origin
  become: yes
  become_user: "{{ deploy_user|default('technical') }}"
  shell: "(cd {{ project_dir }} && git remote add origin {{ git_deploy_url }}) || true"

- name: Check presence of .git
  become: yes
  stat:
      path: "{{ project_dir }}/.git"
  register: dot_git

- name: Correct .git permissions if necessary
  become: yes
  when: dot_git.stat.exists == True
  file:
      path: "{{ project_dir }}/.git"
      owner: "{{ deploy_user|default('technical') }}"
      group: "{{ deploy_group|default('technical') }}"
      recurse: yes
      state: directory

- name: Copy until-compose-env-running script
  become: yes
  copy:
      src: usr/local/bin/add-known-host-by-git-url
      dest: /usr/local/bin/add-known-host-by-git-url
      mode: "+x"

#
# SSH Agent support
#
- name: Configure sudo to keep SSH_AUTH_SOCK
  become: yes
  lineinfile:
      dest: /etc/sudoers
      line: 'Defaults env_keep+=SSH_AUTH_SOCK'
      create: yes
      owner: root
      group: root
      mode: "0440"
      state: present
  when: configure_sudoers is defined and configure_sudoers|bool

#
# Add GIT server to known hosts
#
- name: Make sure the GIT host is known to local ssh client
  become: yes
  become_user: "{{ deploy_user|default('technical') }}"
  shell: "add-known-host-by-git-url {{ git_deploy_url }}"

- name: Fetch the repository
  become: yes
  become_user: "{{ deploy_user|default('technical') }}"
  git:
      repo: "{{git_deploy_url}}"
      dest: "{{ project_dir }}"
      update: true
      version: "{{ git_branch }}"
      force: true

- name: Reset origin to remove the password from remote server
  become: yes
  become_user: "{{ deploy_user|default('technical') }}"
  shell: "cd {{ project_dir }} && git remote remove origin && git remote add origin {{git_regular_deploy_url}}"
